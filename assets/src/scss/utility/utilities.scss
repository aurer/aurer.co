// Push
@mixin push($a, $b) {
	@if $a < $b {
		position: relative;
		left: ($a / $b) * 100%;
	}
}

// Pull
@mixin pull($a, $b) {
	@if $a < $b {
		position: relative;
		left: -($a / $b) * 100%;
	}
}

@mixin hidden() {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
}

@mixin hiddenFocusable() {
	&:active,
	&:focus {
		clip: auto;
		height: auto;
		margin: 0;
		overflow: visible;
		position: static;
		width: auto;
	}
}

// Hide only visually, but have it available for screen readers:
.hidden {
	@include hidden();

	// Extends the .visuallyhidden class to allow the element
	// to be focusable when navigated to via the keyboard:
	&.focusable {
		@include hiddenFocusable();
	}
}

// Simple floats
.u-left {
	float: left;
}

.u-right {
	float: right;
}

// Clearfix: contain floats
.u-clearFix {
	&:after {
		content: ' ';
		display: table;
		clear: both;
	}
}

@mixin shadow() {
	box-shadow: 0 15px 30px rgba($color-neutral-darker, 0.2), 0 2px 10px rgba($color-neutral-darker, 0.05);
}

@mixin shadow-sm() {
	box-shadow: 0 10px 20px rgba($color-neutral-darker, 0.2), 0 2px 8px rgba($color-neutral-darker, 0.05);
}

@mixin shadow-lg {
	box-shadow: 0 15px 40px rgba($color-neutral-darker, 0.2), 0 2px 10px rgba($color-neutral-darker, 0.05);
}

@mixin easeOut() {
	transition-timing-function: $transition-1;
}

@mixin transition($speed: 0.3s) {
	transition: all $speed;
	@include easeOut();
}
